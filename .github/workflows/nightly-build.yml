name: Nightly Build and QA Test

on:
  workflow_dispatch:

jobs:
  test-on-temp-ec2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Infra Repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Launch Temp EC2
        id: launch_ec2
        run: |
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ami-0c2b8ca1dad447f8a \
            --count 1 \
            --instance-type t2.micro \
            --key-name my-ec2-key \
            --security-group-ids sg-0dec66a9ba8d66a75 \
            --subnet-id subnet-07e2cadc5b35439a8 \
            --query 'Instances[0].InstanceId' \
            --output text)
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

      - name: Get EC2 Public IP
        run: |
          PUBLIC_IP=$(aws ec2 describe-instances \
            --instance-ids $INSTANCE_ID \
            --query 'Reservations[0].Instances[0].PublicIpAddress' \
            --output text)
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $PUBLIC_IP >> ~/.ssh/known_hosts

      - name: SSH into EC2 and Run Docker Test
        env:
          ECR_FE: 390638349876.dkr.ecr.us-east-1.amazonaws.com/devops/frontend
          ECR_SIGNUP: 390638349876.dkr.ecr.us-east-1.amazonaws.com/devops/signup
          ECR_POST: 390638349876.dkr.ecr.us-east-1.amazonaws.com/devops/post
        run: |
          ssh ec2-user@$PUBLIC_IP << 'EOF'
            sudo yum install -y docker
            sudo systemctl start docker
            sudo usermod -aG docker ec2-user
            newgrp docker
            docker --version
          
            aws ecr get-login-password --region us-east-1 | docker login -u AWS --password-stdin $ECR_FE
            aws ecr get-login-password --region us-east-1 | docker login -u AWS --password-stdin $ECR_SIGNUP
            aws ecr get-login-password --region us-east-1 | docker login -u AWS --password-stdin $ECR_POST
          
            docker network create myapp-net || true
          
            docker pull $ECR_FE:latest
            docker pull $ECR_SIGNUP:latest
            docker pull $ECR_POST:latest
          
            docker run -d --name backend-signup -p 8081:8080 \
              --network myapp-net \
              $ECR_SIGNUP:latest
          
            docker run -d --name backend-post -p 8080:8080 \
              --network myapp-net \
              $ECR_POST:latest
          
            docker run -d --name frontend -p 80:80 \
              --network myapp-net \
              $ECR_FE:latest
          
            sleep 20
            curl http://localhost:80 || exit 1
            curl http://localhost:8081/api2/members || exit 1
            curl http://localhost:8080/api/health || exit 1
          
            echo "âœ… Smoke Test Passed"
          EOF

      - name: Terminate EC2
        if: always()
        run: |
          aws ec2 terminate-instances --instance-ids $INSTANCE_ID || true
